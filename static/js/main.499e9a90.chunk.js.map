{"version":3,"sources":["host.js","store/actionCreators.js","store/actionTypes.js","components/AddNew.js","components/Modal.js","components/Contact.js","components/App.js","store/reducer.js","store/index.js","index.js"],"names":["process","setContacts","dispatch","fetch","host","method","then","response","json","type","payload","contacts","reverse","connect","state","props","useState","show","setShow","name","phone","info","image","form","setForm","animatedProps","useTransition","config","duration","from","height","opacity","enter","leave","handleData","target","value","addClickHandler","fd","FormData","append","JSON","stringify","body","handleImage","files","id","className","onClick","map","item","key","div","style","onChange","placeholder","required","size","accept","Modal","contact","deleteClickHandler","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","e","_id","isEditing","setState","editDataFetch","a","headers","console","log","editClickHandler","event","handleForm","transitions","position","alt","src","defaultValue","data-target","data-toggle","deleteDataFetch","useEffect","initialState","reducer","action","store","createStore","applyMiddleware","thunk","render","document","getElementById"],"mappings":"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","file":"static/js/main.499e9a90.chunk.js","sourcesContent":["export default process.env.NODE_ENV ==='development' ? 'http://localhost:4000' : 'https://contact-list-api-node.herokuapp.com'","import host from '../host'\nimport { SET_CONTACTS } from './actionTypes'\n\nexport const setContacts = () => dispatch => {\n\tfetch(`${host}/contacts/getList`, {\n\t\tmethod: 'GET'\n\t})\n\t\t.then(response => response.json())\n\t\t.then(response => {\n\t\t\tdispatch({\n\t\t\t\ttype: SET_CONTACTS,\n\t\t\t\tpayload: response.contacts.reverse()\n\t\t\t})\n\t\t})\n}\n","export const SET_CONTACTS = 'SET_CONTACTS'","import React, { useState } from 'react'\nimport host from '../host'\nimport { animated, useTransition } from 'react-spring'\nimport { setContacts } from '../store/actionCreators'\nimport { connect } from 'react-redux'\n\nconst AddNew = ({ setContacts }) => {\n\tconst [show, setShow] = useState(false)\n\tconst [form, setForm] = useState({\n\t\tname: '',\n\t\tphone: '',\n\t\tinfo: '',\n\t\timage: {}\n\t})\n\tconst animatedProps = useTransition(show, null, {\n\t\tconfig: { duration: 500 },\n\t\tfrom: {\n\t\t\theight: 0,\n\t\t\topacity: 0\n\t\t},\n\t\tenter: {\n\t\t\theight: 300,\n\t\t\topacity: 1\n\t\t},\n\t\tleave: {\n\t\t\theight: 0,\n\t\t\topacity: 0\n\t\t}\n\t})\n\tconst addNewToggler = () => {\n\t\tsetShow(show => !show)\n\t}\n\tconst handleData = ({ target }) => {\n\t\tconst { name, value } = target\n\t\tsetForm({\n\t\t\t...form,\n\t\t\t[name]: value\n\t\t})\n\t}\n\tconst addClickHandler = () => {\n\t\tconst fd = new FormData(form)\n\t\tfd.append('image', form.image)\n\t\tfd.append('form', JSON.stringify(form))\n\t\tfetch(`${host}/contacts/create`, {\n\t\t\tbody: fd,\n\t\t\tmethod: 'POST'\n\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(() => {\n\t\t\t\tsetContacts()\n\t\t\t})\n\t}\n\tconst handleImage = ({ target }) => {\n\t\tsetForm({\n\t\t\t...form,\n\t\t\timage: target.files[0]\n\t\t})\n\t}\n\n\treturn (\n\t\t<div id=\"header-add\" className=\"d-flex flex-column\">\n\t\t\t<div className=\"d-flex justify-content-start\">\n\t\t\t\t<button className=\"btn btn-primary\" onClick={addNewToggler}>\n\t\t\t\t\tAdd new contact{' '}\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t{animatedProps.map(\n\t\t\t\t({ item, key, props }) =>\n\t\t\t\t\titem && (\n\t\t\t\t\t\t<animated.div\n\t\t\t\t\t\t\tstyle={props}\n\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\tclassName=\"d-flex flex-column head-wrapper justify-content-center align-items-center\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div className={'form-group d-flex align-items-center'}>\n\t\t\t\t\t\t\t\t<label className={'pr-3'}>\n\t\t\t\t\t\t\t\t\tName<span className={'text-danger'}>&nbsp;*</span>\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tclassName={'form-control'}\n\t\t\t\t\t\t\t\t\tvalue={form.name}\n\t\t\t\t\t\t\t\t\tname={'name'}\n\t\t\t\t\t\t\t\t\tonChange={handleData}\n\t\t\t\t\t\t\t\t\tplaceholder=\"John Doe\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className={'form-group d-flex align-items-center'}>\n\t\t\t\t\t\t\t\t<label className={'pr-3'}>\n\t\t\t\t\t\t\t\t\tPhone<span className={'text-danger'}>&nbsp;*</span>\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tclassName={'form-control'}\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\tvalue={form.phone}\n\t\t\t\t\t\t\t\t\tname={'phone'}\n\t\t\t\t\t\t\t\t\tonChange={handleData}\n\t\t\t\t\t\t\t\t\tplaceholder=\"8-800-555-35-35\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className={'form-group d-flex align-items-center'}>\n\t\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tclassName={'form-control'}\n\t\t\t\t\t\t\t\t\tsize=\"40\"\n\t\t\t\t\t\t\t\t\tvalue={form.info}\n\t\t\t\t\t\t\t\t\tname={'info'}\n\t\t\t\t\t\t\t\t\tonChange={handleData}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Additional information\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className={'form-group d-flex align-items-center'}>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\t\t\t\tclassName={''}\n\t\t\t\t\t\t\t\t\taccept=\"image/*\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"image\"\n\t\t\t\t\t\t\t\t\tonChange={handleImage}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<button className=\"btn btn-success\" onClick={addClickHandler}>\n\t\t\t\t\t\t\t\tAdd contact\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</animated.div>\n\t\t\t\t\t)\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nconst mapStateToProps = (state, props) => ({\n\t...props,\n\tcontacts: state.contacts\n})\n\nconst mapDispatchToProps = dispatch => ({\n\tsetContacts: () => dispatch(setContacts())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddNew)\n","import React from 'react'\n\nconst Modal = ({contact,deleteClickHandler}) => {\n\t\tconst id = \"exampleModal\"+contact.id\t\t\n\t\treturn(\n\t\t\t<div className=\"modal fade\" id={id} tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n\t\t\t  <div className=\"modal-dialog\" role=\"document\">\n\t\t\t    <div className=\"modal-content\">\n\t\t\t      <div className=\"modal-header\">\n\t\t\t        <h5 className=\"modal-title\" id=\"exampleModalLabel\">Delete confirmation</h5>\n\t\t\t        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n\t\t\t          <span aria-hidden=\"true\">&times;</span>\n\t\t\t        </button>\n\t\t\t      </div>\n\t\t\t      <div className=\"modal-body\">\n\t\t\t        Are you sure want to delete <b>{contact.name}</b> from contact list?\n\t\t\t      </div>\n\t\t\t      <div className=\"modal-footer\">\n\t\t\t        <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">No,close</button>\n\t\t\t        <button type=\"button\" onClick={(e)=>deleteClickHandler(contact._id)} data-dismiss=\"modal\" className=\"btn btn-danger\">Yes,delete</button>\n\t\t\t      </div>\n\t\t\t    </div>\n\t\t\t  </div>\n\t\t\t</div>\n\t\t\t)\n\n}\nexport default Modal","import 'bootstrap/dist/css/bootstrap.css'\nimport 'bootstrap/dist/js/bootstrap.js'\nimport React, { useState } from 'react'\nimport { animated, useTransition } from 'react-spring'\nimport Modal from './Modal'\nimport host from '../host'\nimport './scss/style.scss'\nimport { setContacts } from '../store/actionCreators'\nimport { connect } from 'react-redux'\n\nconst Contact = ({ deleteClickHandler, ...props }) => {\n\tconst [state, setState] = useState({\n\t\tisEditing: false,\n\t\tcontact: props.contact || {}\n\t})\n\tconst editDataFetch = async contact => {\n\t\tfetch(`${host}/contacts/update/${contact._id}`, {\n\t\t\tmethod: 'PATCH',\n\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\tbody: JSON.stringify(contact),\n\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(response => console.log(response))\n\t}\n\tconst editClickHandler = (event, contact) => {\n\t\tif (state.isEditing) {\n\t\t\tif (contact.name && contact.phone) {\n\t\t\t\tsetState({\n\t\t\t\t\t...state,\n\t\t\t\t\tisEditing: !state.isEditing\n\t\t\t\t})\n\t\t\t\teditDataFetch(contact)\n\t\t\t}\n\t\t} else {\n\t\t\tsetState({\n\t\t\t\t...state,\n\t\t\t\tisEditing: !state.isEditing\n\t\t\t})\n\t\t}\n\t}\n\n\tconst handleForm = ({ target }) => {\n\t\tconst { name, value } = target\n\t\tsetState({\n\t\t\t...state,\n\t\t\tcontact: {\n\t\t\t\t...contact,\n\t\t\t\t[name]: value\n\t\t\t}\n\t\t})\n\t}\n\tconst transitions = useTransition(state.isEditing, null, {\n\t\tfrom: {\n\t\t\topacity: 0,\n\t\t\tposition: 'absolute'\n\t\t},\n\t\tenter: {\n\t\t\topacity: 1,\n\t\t\tposition: 'relative'\n\t\t},\n\t\tleave: {\n\t\t\tposition: 'absolute',\n\t\t\topacity: 0\n\t\t}\n\t})\n\n\tconst { contact } = state\n\treturn transitions.map(({ item, key, props }) => (\n\t\t<div key={key} className=\" mr-4 contact-wrapper position-relative\">\n\t\t\t{!item ? (\n\t\t\t\t<animated.div\n\t\t\t\t\tstyle={props}\n\t\t\t\t\tclassName=\"pt-2 px-4 my-3 mr-5 contact-wrapper  d-flex flex-column justify-content-center align-items-between main-wrapper  w-100\"\n\t\t\t\t>\n\t\t\t\t\t<div className=\"d-flex flex-row flex-wrap justify-content-between \">\n\t\t\t\t\t\t<div className=\"image-wrapper\">\n\t\t\t\t\t\t\t<img alt=\"contact avatar\" src={`${host}/${contact.image}`} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"contactInfo  d-flex align-items-center\">\n\t\t\t\t\t\t\t<div className=\"d-flex  flex-column\">\n\t\t\t\t\t\t\t\t<div className=\"text-center name\">{contact.name}</div>\n\t\t\t\t\t\t\t\t<div className=\"text-center phone\">{contact.phone}</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"actions d-flex pr-3 align-items-center justify-content-center\">\n\t\t\t\t\t\t\t<button className=\"mr-3 btn btn-info\" onClick={editClickHandler}>\n\t\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tdata-target={'#exampleModal' + contact.id}\n\t\t\t\t\t\t\t\tdata-toggle=\"modal\"\n\t\t\t\t\t\t\t\tclassName=\"btn btn-danger\"\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<Modal deleteClickHandler={deleteClickHandler} contact={contact} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"additionalInfo pt-3 pb-4\">{contact.info}</div>\n\t\t\t\t</animated.div>\n\t\t\t) : (\n\t\t\t\t<animated.div\n\t\t\t\t\tstyle={props}\n\t\t\t\t\tclassName=\" pt-2 px-4 my-3 mr-5 d-flex flex-column contact-wrapper justify-content-center align-items-between main-wrapper w-100\"\n\t\t\t\t>\n\t\t\t\t\t<div className=\"d-flex flex-row  justify-content-between \">\n\t\t\t\t\t\t<div className=\"image-wrapper\">\n\t\t\t\t\t\t\t<img alt=\"contact avatar\" src={`${host}/${contact.image}`} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"contactInfo  d-flex align-items-center\">\n\t\t\t\t\t\t\t<div className=\"d-flex  flex-column\">\n\t\t\t\t\t\t\t\t<div className=\"text-center name\">\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tid={'name-input' + contact.id}\n\t\t\t\t\t\t\t\t\t\tname={'name'}\n\t\t\t\t\t\t\t\t\t\tonChange={handleForm}\n\t\t\t\t\t\t\t\t\t\tvalue={contact.name}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"text-center phone\">\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tonChange={handleForm}\n\t\t\t\t\t\t\t\t\t\tname={'phone'}\n\t\t\t\t\t\t\t\t\t\tdefaultValue={contact.phone}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"actions d-flex pr-3 align-items-center justify-content-center\">\n\t\t\t\t\t\t\t<button className=\"mr-3 btn btn-success\" onClick={e => editClickHandler(e, contact)}>\n\t\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"additionalInfo d-flex  justify-content-center align-items-between\">\n\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tplaceholder=\"Info\"\n\t\t\t\t\t\t\tname={'info'}\n\t\t\t\t\t\t\tonChange={handleForm}\n\t\t\t\t\t\t\tvalue={contact.info}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</animated.div>\n\t\t\t)}\n\t\t</div>\n\t))\n}\n\nconst mapStateToProps = (state, props) => ({\n\t...props,\n\tcontacts: state.contacts\n})\n\nconst mapDispatchToProps = dispatch => ({\n\tsetContacts: () => dispatch(setContacts())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contact)\n","import 'bootstrap/dist/css/bootstrap.css'\nimport React, { useEffect } from 'react'\nimport host from '../host'\nimport AddNew from './AddNew'\nimport Contact from './Contact'\nimport { connect } from 'react-redux'\nimport './scss/style.scss'\nimport { setContacts } from '../store/actionCreators'\n\nconst App = ({ contacts, setContacts, ...props }) => {\n\tconst deleteDataFetch =  id => {\n\t\tfetch(`${host}/contacts/delete/${id}`, {\n\t\t\tmethod: 'DELETE',\n\t\t\tbody: JSON.stringify(id)\n\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(response => {\n\t\t\t\tconsole.log(response)\n\t\t\t\tsetContacts()\n\t\t\t})\n\t}\n\n\tuseEffect(() => {\n\t\tsetContacts()\n\t}, [])\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"jumbotron \">\n\t\t\t\t<div className={'container'}>\n\t\t\t\t\t<AddNew />{' '}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className={'container'}>\n\t\t\t\t<ul className=\"d-flex flex-row align-items-center justify-content-center flex-wrap\">\n\t\t\t\t\t{contacts.map(\n\t\t\t\t\t\tcontact =>\n\t\t\t\t\t\t\tcontact.name && (\n\t\t\t\t\t\t\t\t<li key={contact._id}>\n\t\t\t\t\t\t\t\t\t<Contact deleteClickHandler={deleteDataFetch} contact={contact} />{' '}\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nconst mapStateToProps = (state, props) => ({\n\t...props,\n\tcontacts: state.contacts\n})\n\nconst mapDispatchToProps = dispatch => ({\n\tsetContacts: () => dispatch(setContacts())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import { SET_CONTACTS } from './actionTypes'\n\nconst initialState = {\n\tcontacts: []\n}\n\nconst reducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase SET_CONTACTS:\n\t\t\treturn { ...state, contacts: action.payload }\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default reducer \n","import {createStore, applyMiddleware} from 'redux'\nimport reducer from './reducer'\nimport thunk from 'redux-thunk'\n\nconst store = createStore(reducer,applyMiddleware(thunk))\n\nexport default store","import React from 'react'\nimport { render } from 'react-dom'\nimport App from './components/App'\nimport store from './store'\nimport { Provider } from 'react-redux'\n\nrender(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n)\n"],"sourceRoot":""}